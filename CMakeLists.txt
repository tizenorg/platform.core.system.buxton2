CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(buxton2 C)

# check variables
IF(NOT DEFINED VERSION)
	MESSAGE(FATAL_ERROR "VERSION is not defined")
ENDIF()
STRING(REGEX MATCH "^[0-9]*" MAJVER ${VERSION})

IF(NOT DEFINED LIB_INSTALL_DIR)
	SET(LIB_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/lib)
	MESSAGE(WARNING "LIB_INSTALL_DIR is not defined, default value is used")
ENDIF()
IF(NOT DEFINED INCLUDE_INSTALL_DIR)
	SET(INCLUDE_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/include)
	MESSAGE(WARNING "INCLUDE_INSTALL_DIR is not defined, default value is used")
ENDIF()

OPTION(NDEBUG "Assertions disabled" TRUE)
IF(NDEBUG)
	ADD_DEFINITIONS(-DNDEBUG)
ENDIF()

OPTION(DEBUG_LOG "Debug log enabled" FALSE)
IF(DEBUG_LOG)
	ADD_DEFINITIONS(-DDEBUG_LOG)
ENDIF()

OPTION(BUILD_EXAMPLE "Build example code" FALSE)

IF(NOT "${CONFPATH}" STREQUAL "")
	ADD_DEFINITIONS(-DCONFPATH="${CONFPATH}")
ENDIF()
IF(NOT "${MODULE_DIR}" STREQUAL "")
	ADD_DEFINITIONS(-DMODULE_DIR="${MODULE_DIR}")
ENDIF()
IF(NOT "${DB_DIR}" STREQUAL "")
	ADD_DEFINITIONS(-DDB_DIR="${DB_DIR}")
ENDIF()
IF(NOT "${TMPFS_DIR}" STREQUAL "")
	ADD_DEFINITIONS(-DTMPFS_DIR="${TMPFS_DIR}")
ENDIF()
IF(NOT "${SOCKPATH}" STREQUAL "")
	ADD_DEFINITIONS(-DSOCKPATH="${SOCKPATH}")
ENDIF()

# pkg-config
INCLUDE(FindPkgConfig)
PKG_CHECK_MODULES(PKGS REQUIRED glib-2.0>=2.36)

FOREACH(flag ${PKGS_CFLAGS})
	SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} ${flag}")
ENDFOREACH()

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${EXTRA_CFLAGS} -Wall")
MESSAGE("CFLAGS: ${CMAKE_C_FLAGS}")

# build subdirectories
INCLUDE_DIRECTORIES(common)

ADD_SUBDIRECTORY(daemon)
ADD_SUBDIRECTORY(backend)
ADD_SUBDIRECTORY(lib)
ADD_SUBDIRECTORY(client)
ADD_SUBDIRECTORY(vconf-compat)

IF(BUILD_EXAMPLE)
	ADD_SUBDIRECTORY(example)
ENDIF()

